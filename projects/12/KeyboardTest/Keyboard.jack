// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

  static int keyboardMem;

    /** Initializes the keyboard. */
    function void init() {
      let keyboardMem = 24576;

      return;

    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
      var char keycode;
      let keycode = Memory.peek(keyboardMem);
      return keycode;
    }

    /**
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character
     * of the pressed key.
     */
    function char readChar() {
      var char readChar;
      var char aChar;
      let readChar = Keyboard.keyPressed();
      while (readChar = 0) {
        let readChar = Keyboard.keyPressed();
      }
      let aChar = readChar;
      while (~(readChar = 0)) {
        let readChar = Keyboard.keyPressed();
      }
      if ((aChar > 31) & (aChar < 129)) {
        do Output.printChar(aChar);
      }
      return aChar;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
      var String inputLine;
      var char inputChar;
      let inputLine = String.new(80);
      do Output.printString(message);
      let inputChar = Keyboard.readChar();
      while (~(inputChar = 128)) {
        if (inputChar = 129) {
          do Output.backSpace();
          do inputLine.eraseLastChar();
        }
        if ((inputChar > 31) & (inputChar < 127)) {
          do inputLine.appendChar(inputChar);
        }
        let inputChar = Keyboard.readChar();
      }

      return inputLine;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces.
     */
    function int readInt(String message) {
      var String inputLine;
      let inputLine = Keyboard.readLine(message);

      return 0;
    }
}
