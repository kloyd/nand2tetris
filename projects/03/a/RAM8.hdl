// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7);
    Register(in=in, out=reg0out, load=reg0);
    Register(in=in, out=reg1out, load=reg1);
    Register(in=in, out=reg2out, load=reg2);
    Register(in=in, out=reg3out, load=reg3);
    Register(in=in, out=reg4out, load=reg4);
    Register(in=in, out=reg5out, load=reg5);
    Register(in=in, out=reg6out, load=reg6);
    Register(in=in, out=reg7out, load=reg7);

    Mux8Way16(a=reg0out, b=reg1out, c=reg2out, d=reg3out, e=reg4out, f=reg5out, g=reg6out, h=reg7out, sel=address, out=out);
}